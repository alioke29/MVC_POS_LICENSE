@model RINOR_POS.Models.shopViewModel

@{
    ViewBag.Title = "Shop Manage Data Add";
}

<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
                Shop
                <span>
                    >
                    New Data
                </span>
            </h1>
        </div>
    </div>

    <section id="widget-grid" class="">
        <div class="row" id="body">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-3" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-togglebutton="false" data-widget-collapsed="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Shop</h2>
                    </header>
                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">

                            @using (Html.BeginForm("Create", "shop", FormMethod.Post, htmlAttributes: new { @class = "smart-form", enctype = "multipart/form-data" }))
                            {
                                <header>
                                    New Data Form
                                </header>

                                <fieldset>
                                    <fieldset>
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.ShopID)
                                        <section>
                                            <div class="row">
                                                <div class="col-md-3">
                                                </div>
                                                <div class="col-lg-8">
                                                    <h3 style="color:green;">Your key should be in register system.</h3>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.MerchantID, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.MerchantID, new SelectList(Model.merchant_list, "MerchantID", "MerchantName"), "- Select Merchant -", htmlAttributes: new { id = "ddlMerchant", @class = "form-control select2", @onChange = "GetBrandList(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.MerchantID, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.BrandID, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.BrandID, new SelectList(Model.brand_list, "BrandID", "BrandName"), "- Select Brand -", htmlAttributes: new { id = "ddlBrand", @class = "form-control select2", @onChange = "GetMasterShopList(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.ShopKey, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor(model => model.ShopKey, new { htmlAttributes = new { @ID = "shopkey", @maxlength = "19", @class = "form-control item form-control-lg", @onkeypress = "javascript:return isNumber(event)", @readonly = "readonly", @style = "text-align:center;font-size:large;background-color:aliceblue", placeholder = "Generated By Request" } })
                                                    @Html.ValidationMessageFor(model => model.ShopKey, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*<div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2"></div>
                                                <div class="col-md-8">
                                                    <input id="btnVerify" value="Verify" class="btn btn-primary" style="height:26px; width:100%" />
                                                </div>
                                            </div>*@
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.ShopName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.ShopName, new { htmlAttributes = new { @class = "form-control", placeholder = "Shop Name" } })
                                                        @Html.ValidationMessageFor(model => model.ShopName, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>

                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.DeliveryName, new { htmlAttributes = new { @class = "form-control", placeholder = "Delivery Name" } })
                                                        @Html.ValidationMessageFor(model => model.DeliveryName, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.ShopCode, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.ShopCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Shop Code" } })
                                                        @Html.ValidationMessageFor(model => model.ShopCode, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>

                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryAddress1, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.DeliveryAddress1, new { htmlAttributes = new { @class = "form-control", placeholder = "Delivery Address 1" } })
                                                        @Html.ValidationMessageFor(model => model.DeliveryAddress1, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Name" } })
                                                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>

                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryAddress2, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.DeliveryAddress2, new { htmlAttributes = new { @class = "form-control", placeholder = "Delivery Address 2" } })
                                                        @Html.ValidationMessageFor(model => model.DeliveryAddress2, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>

                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", placeholder = "Branch Name" } })
                                                        @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>

                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryProvince, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.DeliveryProvince, new SelectList(Model.Province_list, "ProvinceID", "ProvinceName"), "- Select Province -", htmlAttributes: new { id = "ddlDeliveryProvince", @class = "form-control select2", @onChange = "GetDelCity(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.DeliveryProvince, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>

                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.MasterShop, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <span class="onoffswitch-title"></span> <span class="onoffswitch">
                                                        <input type="checkbox" name="MasterShop" id="MasterShop" class="onoffswitch-checkbox" value="true" @(Model.MasterShop.GetValueOrDefault() ? "checked=\"checked\"" : "") />
                                                        <label class="onoffswitch-label" for="MasterShop">
                                                            <span class="onoffswitch-inner" data-swchon-text="Yes" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch"></span>
                                                        </label>
                                                    </span>
                                                </div>
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryCity, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.DeliveryCity, new SelectList(Model.city_list, "CityID", "CityName"), "- Select City -", htmlAttributes: new { id = "ddlDeliveryCity", @class = "form-control select2", @onChange = "GetDelRegion(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.DeliveryCity, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>

                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.MasterShopLink, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.MasterShopLink, new SelectList(Model.shop_list, "ShopID", "ShopName"), "- Select Shop Master -", htmlAttributes: new { id = "ddlMasterShop", @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.MasterShopLink, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryRegion, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.DeliveryRegion, new SelectList(Model.region_list, "RegionID", "RegionName"), "- Select Region -", htmlAttributes: new { id = "ddlDeliveryRegion", @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.DeliveryRegion, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>

                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyRegisterLocation, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <label>
                                                        @Html.RadioButtonFor(model => model.CompanyRegisterLocation, "0")
                                                        HQ<br />
                                                        @Html.RadioButtonFor(model => model.CompanyRegisterLocation, "1")
                                                        Branch
                                                        @Html.EditorFor(model => model.BranchNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Branch No." } })
                                                        @Html.ValidationMessageFor(model => model.CompanyRegisterLocation, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryZipCode, htmlAttributes: new { @class = "control-label" })
                                                    <br />
                                                    <br />
                                                    <br />
                                                    @Html.LabelFor(model => model.DeliveryTelephone, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.DeliveryZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Delivery Zip Code" } })
                                                        @Html.ValidationMessageFor(model => model.DeliveryZipCode, "", new { @class = "text-danger" })
                                                        <br />
                                                        @Html.EditorFor(model => model.DeliveryTelephone, new { htmlAttributes = new { @class = "form-control", placeholder = "Delivery Telephone" } })
                                                        @Html.ValidationMessageFor(model => model.DeliveryTelephone, "", new { @class = "text-danger" })
                                                    </label>
                                                </div><br />
                                            </div>
                                        </section>

                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.IsShop, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <span class="onoffswitch-title"></span> <span class="onoffswitch">
                                                        <input type="checkbox" name="IsShop" id="chk_IsShop" class="onoffswitch-checkbox" value="true" @(Model.IsShop.GetValueOrDefault() ? "checked=\"checked\"" : "") />
                                                        <label class="onoffswitch-label" for="chk_IsShop">
                                                            <span class="onoffswitch-inner" data-swchon-text="Yes" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch"></span>
                                                        </label>
                                                    </span>
                                                </div>
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.DeliveryFax, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.DeliveryFax, new { htmlAttributes = new { @class = "form-control", placeholder = "Delivery Fax" } })
                                                        @Html.ValidationMessageFor(model => model.DeliveryFax, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>

                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.IsInv, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <span class="onoffswitch-title"></span> <span class="onoffswitch">
                                                        <input type="checkbox" name="IsInv" id="chk_IsInv" class="onoffswitch-checkbox" value="true" @(Model.IsInv.GetValueOrDefault() ? "checked=\"checked\"" : "") />
                                                        <label class="onoffswitch-label" for="chk_IsInv">
                                                            <span class="onoffswitch-inner" data-swchon-text="Yes" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch"></span>
                                                        </label>
                                                    </span>
                                                </div>
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyRegisterID, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.CompanyRegisterID, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Register" } })
                                                        @Html.ValidationMessageFor(model => model.CompanyRegisterID, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.BranchNameInFullTaxReport, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.BranchNameInFullTaxReport, new { htmlAttributes = new { @class = "form-control", placeholder = "Branch Name In Full Tax Report" } })
                                                        @Html.ValidationMessageFor(model => model.BranchNameInFullTaxReport, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>

                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.IPAddress, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.IPAddress, new { htmlAttributes = new { @class = "form-control", placeholder = "IP Address" } })
                                                        @Html.ValidationMessageFor(model => model.IPAddress, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyAddress1, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-3">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.CompanyAddress1, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Address 1" } })
                                                        @Html.ValidationMessageFor(model => model.CompanyAddress1, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.StartSaleDate, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input-group">
                                                        @{var StartSaleDate = string.Format("{0:dd-MM-yyyy}", Model.StartSaleDate); }
                                                        @Html.EditorFor(model => StartSaleDate, new { htmlAttributes = new { @class = "form-control", placeholder = "DD-MM-YYYY", id = "StartSaleDate" } })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyAddress2, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-3">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.CompanyAddress2, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Address 2" } })
                                                        @Html.ValidationMessageFor(model => model.CompanyAddress2, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                                <div class="col-md-1" . ng->
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.OpenHour, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input-group">
                                                        @{var OpenHour = string.Format(@"{0:hh\:mm}", Model.OpenHour); }
                                                        @Html.EditorFor(model => OpenHour, new { htmlAttributes = new { @class = "form-control text-center clockpicker", placeholder = "HH:mm", id = "OpenHour" } })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                        @Html.ValidationMessageFor(model => model.OpenHour, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>

                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyProvince, htmlAttributes: new { @class = "control-label", id = "ddlCompanyProvince" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.CompanyProvince, new SelectList(Model.Province_list, "ProvinceID", "ProvinceName"), "- Select Province -", htmlAttributes: new { @class = "form-control select2", @onChange = "GetCity(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.CompanyProvince, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CloseHour, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input-group">
                                                        @{var CloseHour = string.Format(@"{0:hh\:mm}", Model.CloseHour); }
                                                        @Html.EditorFor(model => CloseHour, new { htmlAttributes = new { @class = "form-control text-center clockpicker", placeholder = "HH:mm", id = "CloseHour" } })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                        @Html.ValidationMessageFor(model => model.CloseHour, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyCity, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.CompanyCity, new SelectList(Model.city_list, "CityID", "CityName"), "- Select City -", htmlAttributes: new { id = "ddlCompanyCity", @class = "form-control select2", @onChange = "GetRegion(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.CompanyCity, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                                <div class="col-md-2">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.SLOC, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.SLOC, new { htmlAttributes = new { @class = "form-control", placeholder = "SLOC" } })
                                                        @Html.ValidationMessageFor(model => model.SLOC, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyRegion, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.CompanyRegion, new SelectList(Model.region_list, "RegionID", "RegionName"), "- Select Region -", htmlAttributes: new { id = "ddlCompanyRegion", @class = "form-control select2" })
                                                        @Html.ValidationMessageFor(model => model.CompanyRegion, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.CompanyZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Zip Code" } })
                                                        @Html.ValidationMessageFor(model => model.CompanyZipCode, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyTelephone, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.CompanyTelephone, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Telephone" } })
                                                        @Html.ValidationMessageFor(model => model.CompanyTelephone, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.CompanyFax, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.CompanyFax, new { htmlAttributes = new { @class = "form-control", placeholder = "Company Fax" } })
                                                        @Html.ValidationMessageFor(model => model.CompanyFax, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.HasSC, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-2">
                                                    <span class="onoffswitch-title"></span> <span class="onoffswitch">
                                                        <input type="checkbox" name="IsInv" id="chk_HasSC" class="onoffswitch-checkbox" value="true" @(Model.HasSC.GetValueOrDefault() ? "checked=\"checked\"" : "") />
                                                        <label class="onoffswitch-label" for="chk_HasSC">
                                                            <span class="onoffswitch-inner" data-swchon-text="Yes" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch"></span>
                                                        </label>
                                                    </span>
                                                </div>
                                            </div>
                                        </section>

                                    </fieldset>
                                </fieldset>

                                <footer>
                                    <div class="form-group">
                                        <div class="col-md-7">
                                            @Html.ActionLink("Cancel", "Index", "crud", htmlAttributes: new { @class = "btn btn-default" })
                                            <input type="submit" value="Save" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </footer>

                                                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#StartSaleDate').datepicker({
                dateFormat: 'dd-mm-yy',
                prevText: '<i class="fa fa-chevron-left"></i>',
                nextText: '<i class="fa fa-chevron-right"></i>',
                changeMonth: true,
                changeYear: true
            });
            $('.clockpicker').clockpicker({
                placement: 'top',
                align: 'left',
                autoclose: 'true'
            });
        });
        function GetBrandList(MerchantID) {
            var loc_id = $("#ddlMerchant").val();
            $.ajax({
                "url": baseURL + "productprice/GetBrandList?MerchantID=" + MerchantID,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select Brand </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.BrandID + '>' + entry.BrandName + '</option>';
                    })
                    $("#ddlBrand").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }

        function GetMasterShopList(BrandID) {
            var loc_id = $("#ddlBrand").val();
            $.ajax({
                "url": baseURL + "productprice/GetMasterShopList?BrandID=" + BrandID,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select Master Shop </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.ShopID + '>' + entry.ShopName + '</option>';
                    })
                    $("#ddlMasterShop").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }

        document.getElementById('shopkey').addEventListener('keydown', function (e) {
            var value = this.value;
            if (value.length < 18) {
                if (String.fromCharCode(e.keyCode) != "\b") {
                    if (value.length % 5 == 4) {
                        this.value = this.value + '-';
                    }
                }
            }
        }, false);

        function isNumber(evt) {
            var iKeyCode = (evt.which) ? evt.which : evt.keyCode
            if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))
                return false;

            return true;
        };

        function GetCity(ProvID) {
            var loc_id = $("#ddlCompanyProvince").val();
            $.ajax({
                "url": baseURL + "shop/GetCityList?ProvinceID=" + ProvID,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select City </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.CityID + '>' + entry.CityName + '</option>';
                    })
                    $("#ddlCompanyCity").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }

        function GetRegion(CityID) {
            var loc_id = $("#ddlCompanyCity").val();
            $.ajax({
                "url": baseURL + "shop/GetRegionList?CityID=" + CityID,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select Region </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.RegionID + '>' + entry.RegionName + '</option>';
                    })
                    $("#ddlCompanyRegion").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }

        function GetDelCity(ProvID) {
            var loc_id = $("#ddlDeliveryProvince").val();
            $.ajax({
                "url": baseURL + "shop/GetCityList?ProvinceID=" + ProvID,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select City </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.CityID + '>' + entry.CityName + '</option>';
                    })
                    $("#ddlDeliveryCity").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }

        function GetDelRegion(CityID) {
            var loc_id = $("#ddlDeliveryCity").val();
            $.ajax({
                "url": baseURL + "shop/GetRegionList?CityID=" + CityID,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select Region </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.RegionID + '>' + entry.RegionName + '</option>';
                    })
                    $("#ddlDeliveryRegion").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }
    </script>
}