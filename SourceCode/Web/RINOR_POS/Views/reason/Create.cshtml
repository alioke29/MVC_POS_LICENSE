@model RINOR_POS.Models.reasongroupViewModel

@{
    ViewBag.Title = "Reason Group";
}

<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
                Reason Group
                <span>
                    >
                    New Data
                </span>
            </h1>
        </div>
    </div>

    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-3" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-togglebutton="false" data-widget-collapsed="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Reason Group </h2>
                    </header>
                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">

                            @using (Html.BeginForm("Create", "reason", FormMethod.Post, htmlAttributes: new { @class = "smart-form", enctype = "multipart/form-data" }))
                            {
                                <header>
                                    New Data Form
                                </header>

                                <fieldset>
                                    <fieldset>
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <br />
                                        @Html.HiddenFor(model => model.ReasonGroupID)
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.MasterShopID, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    <label class="input">
                                                        @Html.DropDownListFor(model => model.MasterShopID, new SelectList(Model.MasterShopList, "ShopID", "ShopName"), "- Select Master Shop -", htmlAttributes: new { @id = "ddlMasterShop", @class = "form-control select2", @onChange = "GetShopList(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.MasterShopID, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.ShopID, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    @Html.DropDownListFor(model => model.ShopID, new SelectList(Model.ShopList, "ShopID", "ShopName"), "- Select Shop -", htmlAttributes: new { @id = "ddlShop", @class = "form-control select2" })
                                                    @Html.ValidationMessageFor(model => model.ShopID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.ReasonGroupName, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    <label class="input">
                                                        @Html.EditorFor(model => model.ReasonGroupName, new { htmlAttributes = new { @class = "form-control col-lg-6", placeholder = "Reason Group Name" } })
                                                        @Html.ValidationMessageFor(model => model.ReasonGroupName, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.Activate, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    <span class="onoffswitch-title"></span> <span class="onoffswitch">
                                                        <input type="checkbox" name="Activate" id="Activate" class="onoffswitch-checkbox" value="true" @(Model.Activate ? "checked=\"checked\"" : "") />
                                                        <label class="onoffswitch-label" for="Activate">
                                                            <span class="onoffswitch-inner" data-swchon-text="Yes" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch"></span>
                                                        </label>
                                                    </span>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.AllowedInput, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    <span class="onoffswitch-title"></span> <span class="onoffswitch">
                                                        <input type="checkbox" name="AllowedInput" id="AllowedInput" class="onoffswitch-checkbox" value="true" @(Model.AllowedInput ? "checked=\"checked\"" : "") />
                                                        <label class="onoffswitch-label" for="AllowedInput">
                                                            <span class="onoffswitch-inner" data-swchon-text="Yes" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch"></span>
                                                        </label>
                                                    </span>
                                                </div>
                                            </div>
                                        </section>
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.isRequiredAmount, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-lg-8">
                                                    <span class="onoffswitch-title"></span> <span class="onoffswitch">
                                                        <input type="checkbox" name="isRequiredAmount" id="isRequiredAmount" class="onoffswitch-checkbox" value="true" @(Model.isRequiredAmount ? "checked=\"checked\"" : "") />
                                                        <label class="onoffswitch-label" for="isRequiredAmount">
                                                            <span class="onoffswitch-inner" data-swchon-text="Yes" data-swchoff-text="No"></span>
                                                            <span class="onoffswitch-switch"></span>
                                                        </label>
                                                    </span>
                                                </div>
                                            </div>
                                        </section>
                                    </fieldset>
                                </fieldset>

                                <footer>
                                    <div class="form-group">
                                        <div class="col-md-7">
                                            @Html.ActionLink("Cancel", "Index", "reason", htmlAttributes: new { @class = "btn btn-default" })
                                            <input type="submit" value="Save" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </footer>

                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

@section pagespecific {
    <script type="text/javascript">
        function GetShopList(MasterShopID) {
            $.ajax({
                "url": baseURL + "reason/GetShopList?MasterShopID=" + MasterShopID,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select Shop </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.ShopID + '>' + entry.ShopName + '</option>';
                    })
                    $("#ddlShop").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }

    </script>
}