@model RINOR_POS.Models.vw_product_combo_list

@{
    ViewBag.Title = "Product Combo";
}

<div id="content">
    <!-- row -->
    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
                Product Combo
                <span>
                    >
                    List
                </span>
            </h1>
        </div>

        <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
            <!-- Button trigger modal -->
            <a class="btn btn-primary btn-lg pull-right header-btn hidden-mobile" href="@Url.Action("Create", "ProductCombo", new { id = Model.ProductGroupID }, Request.Url.Scheme)"><i class='fa fa-plus'></i> Product Combo</a>
        </div>
        <div class="row">
            <a class="btn btn-default btn-sm pull-right header-btn hidden-mobile" style="margin-bottom:15px; margin-right:25px" href="@Url.Action("Index", "Product", new { id = Model.ProductGroupID }, Request.Url.Scheme)"><i class='fa fa-arrow-circle-left'></i> Back to Product Group</a>
        </div>
    </div>
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Product Combo List</h2>
                        @Html.HiddenFor(model => model.ProductGroupID, new { id = "ProductGroupID" })
                    </header>
                    
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <div class="widget-body no-padding">
                            <table class="table table-striped table-bordered table-hover" width="100%" id="table_basic">
                                <thead>
                                    <tr>
                                        <th>
                                            Status
                                        </th>
                                        <th>
                                            Activated
                                        </th>
                                        <th>
                                            Master Shop
                                        </th>
                                        <th>
                                            Product Group
                                        </th>
                                        <th>
                                            Product Combo 
                                        </th>
                                        <th>
                                            Count of Products
                                        </th>
                                        <th>
                                            Product Combo Link
                                        </th>
                                        <th colspan="2" width="5%">Action</th>
                                        <th hidden="hidden" width="5%"></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
    <!-- Modal -->
    <div class="modal fade" id="InfoAsset" tabindex="-1" role="dialog"></div>
</div>

@section pagespecific {
    <script type="text/javascript">

        function DeleteData(id) {
            swal({
                title: "Are you sure want to Delete this data?",
                text: "(this process can\'t be undo)",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, Sure!",
                closeOnConfirm: false,
                closeOnEsc: false,
                closeOnCancel: false,
                showLoaderOnConfirm: true,
                preConfirm: () => {
                    return new Promise(() => {
                        //ajax side
                        swal({
                            title: 'Please wait... delete data in progress....',
                            onOpen: function () {
                                swal.showLoading()
                                $.ajax({
                                    type: "GET",
                                    url: baseURL + "ProductCombo/DeleteItem/" + id,
                                    success: function (data) {
                                        if (data == "1") {
                                            swal.close();
                                            swal("Success", "Success Delete Data", "success");
                                            setTimeout(location.reload(true), 5000);
                                            //window.location.href = "/asset_registration/index";
                                        }
                                        else {
                                            swal("Failed", "Failed Delete Data", "error");
                                        }

                                    },
                                });
                            }
                        });
                    })
                },
                allowOutsideClick: () => !swal.isLoading()
            }).then((result) => {
                if (result.dismiss) {
                    swal("Cancel", "You Cancel Delete Data", "error");
                }
            });
        }

        function UpdateActiveData(id) {
            swal({
                title: "Are you sure want to Change this data?",
                text: "(this process can\'t be undo)",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, Sure!",
                closeOnConfirm: false,
                closeOnEsc: false,
                closeOnCancel: false,
                showLoaderOnConfirm: true,
                preConfirm: () => {
                    return new Promise(() => {
                        //ajax side
                        swal({
                            title: 'Please wait... Change data in progress....',
                            onOpen: function () {
                                swal.showLoading()
                                $.ajax({
                                    type: "GET",
                                    url: baseURL + "ProductCombo/Activate/" + id,
                                    success: function (data) {
                                        if (data == "1") {
                                            swal.close();
                                            swal("Success", "Success Change Data", "success");
                                            setTimeout(location.reload(true), 5000);
                                            //window.location.href = "/asset_registration/index";
                                        }
                                        else {
                                            swal("Failed", "Failed Change Data", "error");
                                        }

                                    },
                                });
                            }
                        });
                    })
                },
                allowOutsideClick: () => !swal.isLoading()
            }).then((result) => {
                if (result.dismiss) {
                    swal("Cancel", "You Cancel Change Data", "error");
                }
            });
        }

        $(document).ready(function () {
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };
            var ProductGroupID = document.getElementById("ProductGroupID").value;
            $('#table_basic').dataTable(
                {
                    "ajax": {
                        "url": baseURL + "ProductCombo/GetIndexList/" + ProductGroupID,
                        "type": "GET",
                        "datatype": "json",
                    },
                    "columns": [
                          {
                              "data": "Activate",
                              "autowidth": true,
                              "mRender": function (data, type, full) {
                                  if (full['Activate'] == true || full['Activate'] == null) {
                                      return '<i class="fa fa-check txt-color-green">';
                                  } else if (full['Activate'] == false) {
                                      return '<i class="fa fa-times txt-color-red"></i>';
                                  }
                              }
                          },
                         {
                             "data": "Activate",
                             "autowidth": true,
                             "mRender": function (data, type, full) {
                                 if (full['Activate'] == null) {
                                     return "";
                                 }
                                 else if (full['Activate'] == true) {
                                     return '<a href="#" onclick="UpdateActiveData(' + full['ProductComboID'] + ')" title="Deactive">Deactive</a>';;
                                 } else if (full['Activate'] == false) {
                                     return '<a href="#" onclick="UpdateActiveData(' + full['ProductComboID'] + ')" title="Activate">Activate</a>';;
                                 }
                             }
                         },
                        { "data": "ShopName", "autoWidth": true },
                        { "data": "ProductGroupName", "autoWidth": true },
                        { "data": "ProductComboName", "autoWidth": true },
                        { "data": "CountProduct", "autoWidth": true },
                        {
                            "data": "action",
                            "autowidth": true,
                            "mRender": function (data, type, full) {
                                return '<a href="' + baseURL + 'ProductCombo/ComboLink/' + full['ProductComboID'] + '" title="Product Combo Link">Product Combo Link</a>';
                            }
                        },
                        {
                            "data": "action",
                            "autowidth": true,
                            "mRender": function (data, type, full) {
                                return '<a href="' + baseURL + 'ProductCombo/edit/' + full['ProductComboID'] + '" title="Edit"><i class="fa fa-pencil"></i></a>';
                            }
                        },
                        {
                            "data": "action",
                            "autowidth": true,
                            "mRender": function (data, type, full) {
                                return '<a href="#" onclick="DeleteData(' + full['ProductComboID'] + ')" title="Delete"><i class="fa fa-trash-o txt-color-red"></i></a>';
                            }
                        }

                    ]
                },
                {
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "oLanguage": {
                        "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
                    },
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_basic) {
                            responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#table_basic'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_basic.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_basic.respond();
                    }
                });
        });
    </script>
}
